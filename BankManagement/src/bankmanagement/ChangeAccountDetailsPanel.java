/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package bankmanagement;

import bankmanagement.cards.AccountCard;
import bankmanagement.cards.CustomerCard;
import bankmanagement.cards.RemoteAccessCard;
import java.util.Enumeration;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author mth
 */
public class ChangeAccountDetailsPanel extends javax.swing.JPanel {

    private BankManagementPanel parentFrame;
    
    private MainFrame mainFrame;
    private AccountCard accoutCard;
    
    public ChangeAccountDetailsPanel(MainFrame mainFrame) {
        this(mainFrame,null);
    }
    
    public ChangeAccountDetailsPanel(MainFrame mainFrame, AccountCard aCard) {
        this.mainFrame = mainFrame;
        this.accoutCard = aCard;
        initComponents();
        initOwnerBox();
        updateData();
    }
    
    private void updateData() {
        if (accoutCard != null) {
            accountsOwnerSelectBox.setSelectedItem(new CustomerCard(mainFrame.getJdbcTemplate()
                    .queryForMap("select * from customers where CustomerID="+accoutCard.getAccountID()+";")));
            accountNumberField.setText(accoutCard.getAccountNumber());
            balanceField.setText(((Float)accoutCard.getBalance()).toString());
            disabledAccessCheckBox.setSelected(accoutCard.isAccessDisabled());
            transactionConfirmCheckBox.setSelected(accoutCard.isConfirmTransfer());
            
            updateRemoteList();
        }
    }
    
    private void initOwnerBox() {
        List<Map<String,Object>> custs = mainFrame.getJdbcTemplate().queryForList("select * from customers;");
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        this.accountsOwnerSelectBox.setModel(model);
        
        for (Map<String,Object> obj : custs) {
            model.addElement(new CustomerCard(obj));
        }
    }
    
    private void updateRemoteList() {
        List<Map<String,Object>> ral = mainFrame.getJdbcTemplate().queryForList("select * from remoteAccess where AccountID="+accoutCard.getAccountID()+";");
            
        DefaultListModel model = (DefaultListModel)remoteAccessList.getModel();
        
        model.clear();
        
        for (Map<String,Object> obj : ral) {
            model.addElement(new RemoteAccessCard(obj));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editAccountPanel = new javax.swing.JPanel();
        accountsOwnerLabel = new javax.swing.JLabel();
        accountNumberLabel = new javax.swing.JLabel();
        balanceLabel = new javax.swing.JLabel();
        confidentialKeyLabel = new javax.swing.JLabel();
        aosidLabel = new javax.swing.JLabel();
        imeiLabel = new javax.swing.JLabel();
        disabledAccessCheckBox = new javax.swing.JCheckBox();
        transactionConfirmCheckBox = new javax.swing.JCheckBox();
        accountsOwnerSelectBox = new javax.swing.JComboBox();
        accountNumberField = new javax.swing.JTextField();
        balanceField = new javax.swing.JTextField();
        confidentialKeyField = new javax.swing.JTextField();
        aosidField = new javax.swing.JTextField();
        imeiField = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();
        confirmButton = new javax.swing.JButton();
        generateAccountNumberButton = new javax.swing.JButton();
        advancesSettingsButton = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        remoteAccessList = new javax.swing.JList();
        newRemoteAccessButton = new javax.swing.JButton();
        removeRemoteAccessButton = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(672, 564));
        setMinimumSize(new java.awt.Dimension(672, 564));
        setPreferredSize(new java.awt.Dimension(672, 564));

        editAccountPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Account Details"));

        accountsOwnerLabel.setText("Account's Owner");

        accountNumberLabel.setText("Number of Account");

        balanceLabel.setText("Balance");

        confidentialKeyLabel.setText("Confidential Key");

        aosidLabel.setText("ID of Android OS");

        imeiLabel.setText("IMEI Number");

        disabledAccessCheckBox.setText("Disabled Mobile Access");

        transactionConfirmCheckBox.setText("Enabled Transactions Confirm");

        accountsOwnerSelectBox.setEnabled(false);

        accountNumberField.setEditable(false);

        confidentialKeyField.setEditable(false);

        aosidField.setEditable(false);

        imeiField.setEditable(false);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        generateAccountNumberButton.setText("Generate");
        generateAccountNumberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateAccountNumberButtonActionPerformed(evt);
            }
        });

        advancesSettingsButton.setText("Advanced");
        advancesSettingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advancesSettingsButtonActionPerformed(evt);
            }
        });

        remoteAccessList.setModel(new DefaultListModel());
        remoteAccessList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                remoteAccessListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(remoteAccessList);

        newRemoteAccessButton.setText("New");
        newRemoteAccessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newRemoteAccessButtonActionPerformed(evt);
            }
        });

        removeRemoteAccessButton.setText("Remove");
        removeRemoteAccessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRemoteAccessButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editAccountPanelLayout = new javax.swing.GroupLayout(editAccountPanel);
        editAccountPanel.setLayout(editAccountPanelLayout);
        editAccountPanelLayout.setHorizontalGroup(
            editAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editAccountPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editAccountPanelLayout.createSequentialGroup()
                        .addGroup(editAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(accountsOwnerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(accountNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(balanceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(confidentialKeyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(aosidLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(imeiLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(transactionConfirmCheckBox)
                            .addComponent(disabledAccessCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(50, 50, 50)
                        .addGroup(editAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(confidentialKeyField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(balanceField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(accountNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(accountsOwnerSelectBox, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(aosidField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(imeiField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(editAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(advancesSettingsButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(generateAccountNumberButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newRemoteAccessButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeRemoteAccessButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(editAccountPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        editAccountPanelLayout.setVerticalGroup(
            editAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editAccountPanelLayout.createSequentialGroup()
                .addComponent(advancesSettingsButton)
                .addGap(23, 23, 23)
                .addGroup(editAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountsOwnerLabel)
                    .addComponent(accountsOwnerSelectBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accountNumberLabel)
                    .addComponent(generateAccountNumberButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(balanceLabel)
                    .addComponent(balanceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(disabledAccessCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transactionConfirmCheckBox)
                .addGap(4, 4, 4)
                .addGroup(editAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editAccountPanelLayout.createSequentialGroup()
                        .addComponent(newRemoteAccessButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeRemoteAccessButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(editAccountPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(editAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(confidentialKeyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confidentialKeyLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(editAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(aosidField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(aosidLabel))
                        .addGap(7, 7, 7)
                        .addGroup(editAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(imeiField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(imeiLabel))
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addGroup(editAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(confirmButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editAccountPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editAccountPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        BankManagementPanel bmp = (BankManagementPanel)mainFrame;
        bmp.getTabbedPane().setEnabled(true);
        bmp.getTabbedPane().setSelectedIndex(0);
        bmp.getTabbedPane().removeTabAt(bmp.getTabbedPane().getTabCount()-1);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void generateAccountNumberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateAccountNumberButtonActionPerformed
        Random rand = new Random();
        do {
            accountNumberField.setText("");
            for (int i=0; i<26; i++)
                accountNumberField.setText(accountNumberField.getText()+rand.nextInt(10));
        } while (mainFrame.getJdbcTemplate().queryForInt("select count(*) from bankAccounts where AccountNumber=\'"+accountNumberField.getText()+"\';") != 0);
    }//GEN-LAST:event_generateAccountNumberButtonActionPerformed

    private void advancesSettingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advancesSettingsButtonActionPerformed
        if (advancesSettingsButton.isSelected()) {
            accountsOwnerSelectBox.setEnabled(true);
            accountNumberField.setEditable(true);
        } else {
            accountsOwnerSelectBox.setEnabled(false);
            accountNumberField.setEditable(false);
        }
    }//GEN-LAST:event_advancesSettingsButtonActionPerformed

    private void remoteAccessListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_remoteAccessListValueChanged
        RemoteAccessCard rCard = (RemoteAccessCard)remoteAccessList.getSelectedValue();
        if (rCard == null) {
            confidentialKeyField.setText("");
            aosidField.setText("");
            imeiField.setText("");
            return;
        }
        confidentialKeyField.setText(""+rCard.getConfidentialKey());
        aosidField.setText(rCard.getAosid());
        imeiField.setText(rCard.getImei());
    }//GEN-LAST:event_remoteAccessListValueChanged

    private void newRemoteAccessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newRemoteAccessButtonActionPerformed
        RemoteAccessCard rac = new RemoteAccessCard();
        ((DefaultListModel)remoteAccessList.getModel()).addElement(rac);
        remoteAccessList.setSelectedValue(rac, true);
    }//GEN-LAST:event_newRemoteAccessButtonActionPerformed

    private void removeRemoteAccessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRemoteAccessButtonActionPerformed
        RemoteAccessCard rac = (RemoteAccessCard)remoteAccessList.getSelectedValue();
        if (rac == null) return;
        if (rac.getRemoteAccessID() > 0) 
            mainFrame.getJdbcTemplate().execute("delete from remoteAccess where RemoteAccessID="+rac.getRemoteAccessID()+";");
         
        
        remoteAccessList.setSelectedIndex(-1);
        ((DefaultListModel)remoteAccessList.getModel()).removeElement(rac);
    }//GEN-LAST:event_removeRemoteAccessButtonActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        if (accountsOwnerSelectBox.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "You have to select account owner!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (Pattern.compile("\\D+").matcher(accountNumberField.getText()).find() || accountNumberField.getText().length() != 26) {
            JOptionPane.showMessageDialog(this, "Incorrect account number!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            Float.parseFloat(balanceField.getText());
        } catch (Throwable e) {
            JOptionPane.showMessageDialog(this, "Incorrect format of balance!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (accoutCard == null) 
            accoutCard = new AccountCard();
        accoutCard.setCustomerID(((CustomerCard)accountsOwnerSelectBox.getSelectedItem()).getCustomerID());
        accoutCard.setAccountNumber(accountNumberField.getText());
        accoutCard.setBalance(Float.parseFloat(balanceField.getText()));
        accoutCard.setAccessDisabled(disabledAccessCheckBox.isSelected());
        accoutCard.setConfirmTransfer(transactionConfirmCheckBox.isSelected());
        
        
        String sqlQuery;
        
        if (accoutCard.getAccountID() < 0) 
            sqlQuery = "insert into bankAccounts (CustomerID,AccountNumber,Balance,AccessDisabled,TransferConfirm) values ("
                    + accoutCard.getCustomerID()+",\'"+accoutCard.getAccountNumber()+"\',"+accoutCard.getBalance()+","+(accoutCard.isAccessDisabled() ? 1 : 0)+","+(accoutCard.isConfirmTransfer() ? 1 : 0)+");";            
        else 
            sqlQuery = "update bankAccounts set CustomerID="+accoutCard.getCustomerID()+",AccountNumber=\'"+accoutCard.getAccountNumber()+"\',"
                    + "Balance="+accoutCard.getBalance()+",AccessDisabled="+(accoutCard.isAccessDisabled() ? 1 : 0)+",TransferConfirm="+(accoutCard.isConfirmTransfer() ? 1 : 0)+""
                    + " where AccountID="+accoutCard.getAccountID()+";";
        
        System.out.println(sqlQuery);
        mainFrame.getJdbcTemplate().execute(sqlQuery);
        accoutCard.setAccountID(mainFrame.getJdbcTemplate().queryForInt("select AccountID from bankAccounts where AccountNumber=\'"+accoutCard.getAccountNumber()+"\';"));
        
        Enumeration<RemoteAccessCard> racl = ((DefaultListModel)remoteAccessList.getModel()).elements();
        RemoteAccessCard r;
        
        while (racl.hasMoreElements()) {
            r = racl.nextElement();
            if (r.getRemoteAccessID() < 0) {
                mainFrame.getJdbcTemplate().execute("insert into remoteAccess (AccountID,ConfidentialKey) values ("
                        + accoutCard.getAccountID()+",\'"+r.getConfidentialKey()+"\');");
            }
        }
        
        BankManagementPanel bmp = (BankManagementPanel)mainFrame;
        bmp.getTabbedPane().setEnabled(true);
        bmp.getTabbedPane().setSelectedIndex(0);
        bmp.getTabbedPane().removeTabAt(bmp.getTabbedPane().getTabCount()-1);
        bmp.refreshView();
    }//GEN-LAST:event_confirmButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accountNumberField;
    private javax.swing.JLabel accountNumberLabel;
    private javax.swing.JLabel accountsOwnerLabel;
    private javax.swing.JComboBox accountsOwnerSelectBox;
    private javax.swing.JToggleButton advancesSettingsButton;
    private javax.swing.JTextField aosidField;
    private javax.swing.JLabel aosidLabel;
    private javax.swing.JTextField balanceField;
    private javax.swing.JLabel balanceLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField confidentialKeyField;
    private javax.swing.JLabel confidentialKeyLabel;
    private javax.swing.JButton confirmButton;
    private javax.swing.JCheckBox disabledAccessCheckBox;
    private javax.swing.JPanel editAccountPanel;
    private javax.swing.JButton generateAccountNumberButton;
    private javax.swing.JTextField imeiField;
    private javax.swing.JLabel imeiLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newRemoteAccessButton;
    private javax.swing.JList remoteAccessList;
    private javax.swing.JButton removeRemoteAccessButton;
    private javax.swing.JCheckBox transactionConfirmCheckBox;
    // End of variables declaration//GEN-END:variables

    
    public void setAccoutOwner(CustomerCard cCard) {
        accountsOwnerSelectBox.setSelectedItem(cCard);
    }
    
}
