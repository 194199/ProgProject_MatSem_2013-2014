/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package bankmanagement;

import bankmanagement.cards.AccountCard;
import bankmanagement.cards.CustomerCard;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.jdbc.core.JdbcTemplate;

/**
 *
 * @author mth
 */
public class BankManagementPanel extends javax.swing.JFrame implements MainFrame {

    private JdbcTemplate jdbcTemplate;
    private ClassPathXmlApplicationContext context;
    
    
    public BankManagementPanel() {
        initComponents();
        context = new ClassPathXmlApplicationContext("BMbeans.xml");
        jdbcTemplate = context.getBean("jdbcTemplate", JdbcTemplate.class);
        updateCustomerList();
    }
    
    private void updateCustomerList() {
        List<Map<String,Object>> customers = jdbcTemplate.queryForList("select * from customers");
        
        DefaultListModel model = (DefaultListModel)customerList.getModel();
        model.clear();
        
        for (Map<String,Object> obj : customers) {
            model.addElement(new CustomerCard(obj));
        }
        
       // customerList.setModel(model);
    }
    
    private void updateAccountList(CustomerCard cCard) {
        if (cCard.getCustomerID() < 0) 
            return;
        
        List<Map<String,Object>> accounts = jdbcTemplate.queryForList("select * from bankAccounts where CustomerID="+cCard.getCustomerID()+" and Active=1;");
        
        DefaultListModel model = (DefaultListModel)accountList.getModel();
        model.clear();
        
        for (Map<String,Object> obj : accounts) {
            model.addElement(new AccountCard(obj));
        }
        
    }
    
    public void refreshView() {
        updateAccountList((CustomerCard)customerList.getSelectedValue());
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        managementPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        accountList = new javax.swing.JList();
        deleteCustomerButton = new javax.swing.JButton();
        addCustomerButton = new javax.swing.JButton();
        customerInfoPanel = new javax.swing.JPanel();
        customerNameLabel = new javax.swing.JLabel();
        customerAddressLabel = new javax.swing.JLabel();
        customerSurnameLabel = new javax.swing.JLabel();
        customerBirthdateLabel = new javax.swing.JLabel();
        customerNameField = new javax.swing.JTextField();
        customerSurnameField = new javax.swing.JTextField();
        customerAddressField = new javax.swing.JTextField();
        customerBirthdateSpinner = new javax.swing.JSpinner();
        restorePreviousButton = new javax.swing.JButton();
        saveChangesButton = new javax.swing.JButton();
        createAccountButton = new javax.swing.JButton();
        editAccountButton = new javax.swing.JButton();
        removeAccountButon = new javax.swing.JButton();
        exitPaneButton = new javax.swing.JButton();
        showTransactionsButton = new javax.swing.JButton();
        logPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        logTextArea = new javax.swing.JTextArea();
        clearLogButton = new javax.swing.JButton();
        exitLogButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(704, 606));
        setMinimumSize(new java.awt.Dimension(704, 606));
        setUndecorated(true);

        tabbedPane.setName(""); // NOI18N

        DefaultListModel model = new DefaultListModel();
        customerList.setModel(model);
        customerList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                customerListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(customerList);

        DefaultListModel acModel = new DefaultListModel();
        accountList.setModel(acModel);
        jScrollPane2.setViewportView(accountList);

        deleteCustomerButton.setText("Delete Customer");
        deleteCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCustomerButtonActionPerformed(evt);
            }
        });

        addCustomerButton.setText("Add Customer");
        addCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerButtonActionPerformed(evt);
            }
        });

        customerInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("About Customer"));

        customerNameLabel.setText("Name");

        customerAddressLabel.setText("Address");

        customerSurnameLabel.setText("Surname");

        customerBirthdateLabel.setText("Birthdate");

        customerBirthdateSpinner.setModel(new javax.swing.SpinnerDateModel());

        javax.swing.GroupLayout customerInfoPanelLayout = new javax.swing.GroupLayout(customerInfoPanel);
        customerInfoPanel.setLayout(customerInfoPanelLayout);
        customerInfoPanelLayout.setHorizontalGroup(
            customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(customerInfoPanelLayout.createSequentialGroup()
                        .addComponent(customerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customerNameField))
                    .addGroup(customerInfoPanelLayout.createSequentialGroup()
                        .addComponent(customerSurnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customerSurnameField))
                    .addGroup(customerInfoPanelLayout.createSequentialGroup()
                        .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customerAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerBirthdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customerBirthdateSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                            .addComponent(customerAddressField))))
                .addContainerGap())
        );
        customerInfoPanelLayout.setVerticalGroup(
            customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerInfoPanelLayout.createSequentialGroup()
                .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerSurnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerSurnameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerAddressLabel)
                    .addComponent(customerAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(customerInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerBirthdateLabel)
                    .addComponent(customerBirthdateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        restorePreviousButton.setText("Restore Previous");
        restorePreviousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restorePreviousButtonActionPerformed(evt);
            }
        });

        saveChangesButton.setText("Save Changes");
        saveChangesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveChangesButtonActionPerformed(evt);
            }
        });

        createAccountButton.setText("Create Account");
        createAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccountButtonActionPerformed(evt);
            }
        });

        editAccountButton.setText("Edit Account");
        editAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editAccountButtonActionPerformed(evt);
            }
        });

        removeAccountButon.setText("Remove Account");
        removeAccountButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAccountButonActionPerformed(evt);
            }
        });

        exitPaneButton.setText("Exit");
        exitPaneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitPaneButtonActionPerformed(evt);
            }
        });

        showTransactionsButton.setText("Show Transactions");

        javax.swing.GroupLayout managementPanelLayout = new javax.swing.GroupLayout(managementPanel);
        managementPanel.setLayout(managementPanelLayout);
        managementPanelLayout.setHorizontalGroup(
            managementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managementPanelLayout.createSequentialGroup()
                .addContainerGap(233, Short.MAX_VALUE)
                .addGroup(managementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, managementPanelLayout.createSequentialGroup()
                        .addComponent(customerInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, managementPanelLayout.createSequentialGroup()
                        .addGroup(managementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(createAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(saveChangesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removeAccountButon, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(managementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(restorePreviousButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editAccountButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(showTransactionsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                        .addGap(133, 133, 133))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, managementPanelLayout.createSequentialGroup()
                        .addComponent(exitPaneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(managementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, managementPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(managementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(managementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addCustomerButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteCustomerButton, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGap(27, 27, 27)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        managementPanelLayout.setVerticalGroup(
            managementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managementPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(customerInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(managementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(restorePreviousButton)
                    .addComponent(saveChangesButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 212, Short.MAX_VALUE)
                .addGroup(managementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createAccountButton)
                    .addComponent(editAccountButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(managementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeAccountButon)
                    .addComponent(showTransactionsButton))
                .addGap(48, 48, 48)
                .addComponent(exitPaneButton)
                .addContainerGap())
            .addGroup(managementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(managementPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(managementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(managementPanelLayout.createSequentialGroup()
                            .addComponent(jScrollPane1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, managementPanelLayout.createSequentialGroup()
                            .addGap(0, 213, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(89, 89, 89)))
                    .addComponent(addCustomerButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(deleteCustomerButton)
                    .addContainerGap()))
        );

        tabbedPane.addTab("Main Panel", managementPanel);

        logTextArea.setColumns(20);
        logTextArea.setRows(5);
        jScrollPane3.setViewportView(logTextArea);

        clearLogButton.setText("Clear");

        exitLogButton.setText("Exit");
        exitLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitPaneButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout logPanelLayout = new javax.swing.GroupLayout(logPanel);
        logPanel.setLayout(logPanelLayout);
        logPanelLayout.setHorizontalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
                    .addGroup(logPanelLayout.createSequentialGroup()
                        .addComponent(clearLogButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exitLogButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        logPanelLayout.setVerticalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearLogButton)
                    .addComponent(exitLogButton))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Log", logPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitPaneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitPaneButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitPaneButtonActionPerformed

    private void customerListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_customerListValueChanged
        CustomerCard cCard = (CustomerCard)((JList)evt.getSource()).getSelectedValue();
        if (cCard == null) {
            this.customerNameField.setText("");
            this.customerSurnameField.setText("");
        //    this.customerBirthdateSpinner.setValue(cCard.getCustomerBirthdate()); Object Name: Date
            this.customerAddressField.setText("");
            return;
        }
        this.customerNameField.setText(cCard.getCustomerName());
        this.customerSurnameField.setText(cCard.getCustomerSurname());
    //    this.customerBirthdateSpinner.setValue(cCard.getCustomerBirthdate()); Object Name: Date
        this.customerAddressField.setText(cCard.getCustomerAddress());
        
        updateAccountList(cCard);
    }//GEN-LAST:event_customerListValueChanged

    private void addCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerButtonActionPerformed
        CustomerCard newCustomer = new CustomerCard();
        ((DefaultListModel<CustomerCard>)customerList.getModel()).addElement(newCustomer);
        customerList.setSelectedIndex(customerList.getModel().getSize()-1);
        addCustomerButton.setEnabled(false);
        customerList.setEnabled(false);
    }//GEN-LAST:event_addCustomerButtonActionPerformed

    private void saveChangesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveChangesButtonActionPerformed
        if (customerNameField.getText().equals("") || customerNameField.getText().equalsIgnoreCase("Name") ||
                customerSurnameField.getText().equals("") || customerSurnameField.getText().equalsIgnoreCase("Surname")) {
            JOptionPane.showMessageDialog(this, "Name or surname is incorrect", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        CustomerCard cCard = (CustomerCard)customerList.getSelectedValue();
        String sqlQuery;
        
        if (cCard.getCustomerID() < 0) 
            sqlQuery = "insert into customers (Name,Surname,Address) values (\'"+customerNameField.getText()+"\',\'"+customerSurnameField.getText()+"\',\'"+customerAddressField.getText()+"\');";
        else 
            sqlQuery = "update customers set Name=\'"+customerNameField.getText()+"\',Surname=\'"+customerSurnameField.getText()+"\',Address=\'"+customerAddressField.getText()+"\' where CustomerID="+cCard.getCustomerID()+";";
        
        jdbcTemplate.execute(sqlQuery);
        addCustomerButton.setEnabled(true);
        customerList.setEnabled(true);
        updateCustomerList();
    }//GEN-LAST:event_saveChangesButtonActionPerformed

    private void deleteCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCustomerButtonActionPerformed
        CustomerCard cCard = (CustomerCard)customerList.getSelectedValue();
        if (cCard == null) {
            JOptionPane.showMessageDialog(this, "No customer selected", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (jdbcTemplate.queryForInt("select count(*) from customers where CustomerID="+cCard.getCustomerID()+";") > 0) 
            jdbcTemplate.execute("delete from customers where CustomerID="+cCard.getCustomerID()+";");
        
        if (!customerList.isEnabled()) {
            customerList.setEnabled(true);
        }
        updateCustomerList();
    }//GEN-LAST:event_deleteCustomerButtonActionPerformed

    private void restorePreviousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restorePreviousButtonActionPerformed
        CustomerCard cCard = (CustomerCard)customerList.getSelectedValue();
        if (cCard.getCustomerID() < 0) 
            return;
        
        customerAddressField.setText(cCard.getCustomerAddress());
        customerNameField.setText(cCard.getCustomerName());
        customerSurnameField.setText(cCard.getCustomerSurname());
    }//GEN-LAST:event_restorePreviousButtonActionPerformed

    private void createAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountButtonActionPerformed
        CustomerCard cCard = (CustomerCard)customerList.getSelectedValue();
        if (cCard == null) {
            JOptionPane.showMessageDialog(this, "No customer has been chosen!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        ChangeAccountDetailsPanel editAccountPanel = new ChangeAccountDetailsPanel(this);
        tabbedPane.addTab("Adding Account", editAccountPanel);
        tabbedPane.setSelectedIndex(2);
        tabbedPane.setEnabled(false);
        editAccountPanel.setAccoutOwner(cCard);
    }//GEN-LAST:event_createAccountButtonActionPerformed

    private void editAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editAccountButtonActionPerformed
        AccountCard aCard = (AccountCard)accountList.getSelectedValue();
        if (aCard == null) {
            JOptionPane.showMessageDialog(this, "Select account", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        ChangeAccountDetailsPanel editAccountPanel = new ChangeAccountDetailsPanel(this,aCard);
        tabbedPane.addTab("Edit Account", editAccountPanel);
        tabbedPane.setSelectedIndex(2);
        tabbedPane.setEnabled(false);
        editAccountPanel.setAccoutOwner((CustomerCard)customerList.getSelectedValue());
    }//GEN-LAST:event_editAccountButtonActionPerformed

    private void removeAccountButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAccountButonActionPerformed
        AccountCard aCard = (AccountCard)accountList.getSelectedValue();
        if (aCard == null) {
            JOptionPane.showMessageDialog(this, "Select account", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        jdbcTemplate.execute("delete from remoteAccess where AccountID="+aCard.getAccountID()+";");
        jdbcTemplate.execute("update bankAccounts set Active=0 where AccountID="+aCard.getAccountID()+";");
        
        updateAccountList((CustomerCard)customerList.getSelectedValue());
    }//GEN-LAST:event_removeAccountButonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BankManagementPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BankManagementPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BankManagementPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BankManagementPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BankManagementPanel().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList accountList;
    private javax.swing.JButton addCustomerButton;
    private javax.swing.JButton clearLogButton;
    private javax.swing.JButton createAccountButton;
    private javax.swing.JTextField customerAddressField;
    private javax.swing.JLabel customerAddressLabel;
    private javax.swing.JLabel customerBirthdateLabel;
    private javax.swing.JSpinner customerBirthdateSpinner;
    private javax.swing.JPanel customerInfoPanel;
    private javax.swing.JList customerList;
    private javax.swing.JTextField customerNameField;
    private javax.swing.JLabel customerNameLabel;
    private javax.swing.JTextField customerSurnameField;
    private javax.swing.JLabel customerSurnameLabel;
    private javax.swing.JButton deleteCustomerButton;
    private javax.swing.JButton editAccountButton;
    private javax.swing.JButton exitLogButton;
    private javax.swing.JButton exitPaneButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel logPanel;
    private javax.swing.JTextArea logTextArea;
    private javax.swing.JPanel managementPanel;
    private javax.swing.JButton removeAccountButon;
    private javax.swing.JButton restorePreviousButton;
    private javax.swing.JButton saveChangesButton;
    private javax.swing.JButton showTransactionsButton;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables
    
    @Override
    public JdbcTemplate getJdbcTemplate() {
        return jdbcTemplate;
    }

    @Override
    public AbstractApplicationContext getContext() {
        return context;
    }
    
    public JTabbedPane getTabbedPane() {
        return tabbedPane;
    }

}
